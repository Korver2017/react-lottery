[{"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js":"4","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employeeAdd\\EmployeeAdd.js":"5","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\lightbox\\Lightbox.js":"6"},{"size":624,"mtime":1611437448376,"results":"7","hashOfConfig":"8"},{"size":668,"mtime":1611436227459,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611280843184,"results":"10","hashOfConfig":"8"},{"size":3505,"mtime":1611462821073,"results":"11","hashOfConfig":"8"},{"size":1151,"mtime":1611422037385,"results":"12","hashOfConfig":"8"},{"size":2494,"mtime":1611460944669,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1thhyc2",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js",[],["29","30"],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js",["31"],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employeeAdd\\EmployeeAdd.js",["32","33"],"import { useState, useEffect } from 'react';\r\nimport './EmployeeAdd.css';\r\n\r\nimport { FormControl, Button, InputGroup } from 'react-bootstrap';\r\n\r\nfunction EmployeeAdd (props) {\r\n\r\n  function handleAddClick () {\r\n\r\n    console.log ('handleAddClick');\r\n\r\n    let input = document.querySelector ('.form-control');\r\n    let addedEmployee = { name: { first: '', last: '' }, id: { value: '' } };\r\n    \r\n    addedEmployee.name.first = input.value;\r\n    addedEmployee.name.last = input.value;\r\n    addedEmployee.quote = input.value;\r\n    addedEmployee.id.value = input.value;\r\n\r\n    console.log (addedEmployee);\r\n\r\n    input.value = '';\r\n    \r\n    props.handleAddEmployee (addedEmployee);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"employeeAdd\">\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Add Employee\"\r\n          aria-label=\"Add Employee\"\r\n          aria-describedby=\"basic-addon2\"\r\n        />\r\n        <InputGroup.Append>\r\n          <Button variant=\"outline-secondary\" onClick={ handleAddClick }>Button</Button>\r\n        </InputGroup.Append>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeAdd;\r\n","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\lightbox\\Lightbox.js",["34","35","36"],"import './Lightbox.css';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { Button, Modal, Form } from 'react-bootstrap';\r\n\r\nfunction Lightbox (props) {\r\n\r\n  const [show, setShow] = useState (false);\r\n  const [input, setInput] = useState ({ name: { first: '', last: '' }, quote: '' });\r\n  const [employee, setEmployee] = useState ({});\r\n  \r\n  // const handleCloseLightbox = () => props.handleClose ();\r\n  const handleCloseLightbox = () => setShow (false);\r\n\r\n  const handleEditEmployee = () => {\r\n\r\n    console.log ('props.handleEdit');\r\n\r\n    const first = document.querySelector ('.first').value;\r\n    const last = document.querySelector ('.last').value;\r\n    const quote = document.querySelector ('.quote').value;\r\n    \r\n    props.handleEdit ({ name: { first: first, last: last }, quote: quote });\r\n\r\n    handleCloseLightbox ();\r\n  }\r\n\r\n  // useEffect (() => {\r\n\r\n  //   console.log (props);\r\n\r\n  //   setShow (props.isShow);\r\n    \r\n  // }, [props.isShow]);\r\n\r\n  useEffect (() => {\r\n\r\n    console.log (props);\r\n\r\n    if (props.triggerCount <= 0)\r\n      return;\r\n\r\n    console.log (props);\r\n\r\n    setInput ({ name: { first: props.employee.name.first, last:  props.employee.name.last }, quote: props.employee.quote });\r\n\r\n    setShow (true);\r\n    \r\n  }, [props.triggerCount])\r\n\r\n  // useEffect (() => {\r\n\r\n  //   if (! show)\r\n  //     return;\r\n    \r\n  // }, [props.employee]);\r\n\r\n  return (\r\n    <>\r\n      <Modal show={ show } onHide={ handleCloseLightbox }>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Employee - { input.name.first } { input.name.last }</Modal.Title>\r\n        </Modal.Header>\r\n\r\n        <Modal.Body>\r\n\r\n          <Form.Row className=\"mt-2 mb-4\">\r\n            <Form.Control className=\"first col-5 mr-5\" defaultValue={ input.name.first } type=\"text\" placeholder=\"First Name\" />\r\n            <Form.Control className=\"last col-5\" defaultValue={ input.name.last } type=\"text\" placeholder=\"First Name\" />\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Form.Control className=\"quote\" defaultValue={ input.quote } as=\"textarea\" rows={3} />\r\n          </Form.Row>\r\n          \r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n\r\n          <Button variant=\"secondary\" onClick={ handleCloseLightbox }>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={ handleEditEmployee }>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lightbox;\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":80,"column":6,"nodeType":"43","endLine":80,"endColumn":27,"suggestions":"44"},{"ruleId":"45","severity":1,"message":"46","line":1,"column":10,"nodeType":"47","messageId":"48","endLine":1,"endColumn":18},{"ruleId":"45","severity":1,"message":"49","line":1,"column":20,"nodeType":"47","messageId":"48","endLine":1,"endColumn":29},{"ruleId":"45","severity":1,"message":"50","line":11,"column":10,"nodeType":"47","messageId":"48","endLine":11,"endColumn":18},{"ruleId":"45","severity":1,"message":"51","line":11,"column":20,"nodeType":"47","messageId":"48","endLine":11,"endColumn":31},{"ruleId":"41","severity":1,"message":"52","line":50,"column":6,"nodeType":"43","endLine":50,"endColumn":26,"suggestions":"53"},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'employees' and 'props'. Either include them or remove the dependency array. You can also do a functional update 'setEmployees(e => ...)' if you only need 'employees' in the 'setEmployees' call.","ArrayExpression",["56"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'employee' is assigned a value but never used.","'setEmployee' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Update the dependencies array to be: [employees, props, props.addedEmployee]",{"range":"62","text":"63"},"Update the dependencies array to be: [props, props.triggerCount]",{"range":"64","text":"65"},[2027,2048],"[employees, props, props.addedEmployee]",[1264,1284],"[props, props.triggerCount]"]