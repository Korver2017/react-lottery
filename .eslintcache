[{"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js":"4","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js":"5","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js":"6","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js":"7","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js":"8","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js":"9","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js":"10","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js":"11","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js":"12","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js":"13","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js":"14"},{"size":624,"mtime":1612034986658,"results":"15","hashOfConfig":"16"},{"size":869,"mtime":1612035487093,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611280843184,"results":"18","hashOfConfig":"16"},{"size":3932,"mtime":1612035487094,"results":"19","hashOfConfig":"16"},{"size":2486,"mtime":1612034986657,"results":"20","hashOfConfig":"16"},{"size":1782,"mtime":1612034986656,"results":"21","hashOfConfig":"16"},{"size":1761,"mtime":1612035905424,"results":"22","hashOfConfig":"16"},{"size":827,"mtime":1615823696436,"results":"23","hashOfConfig":"24"},{"size":869,"mtime":1615507206594,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1613409601397,"results":"26","hashOfConfig":"24"},{"size":4855,"mtime":1615823696426,"results":"27","hashOfConfig":"24"},{"size":4220,"mtime":1616341497980,"results":"28","hashOfConfig":"24"},{"size":6188,"mtime":1616263288844,"results":"29","hashOfConfig":"24"},{"size":3853,"mtime":1616091885287,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1thhyc2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"129a7ln",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"49"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js",[],["63","64"],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js",["65"],"// React & Component\r\nimport { useState, useEffect } from 'react';\r\nimport './Employees.css';\r\nimport EmployeeEditModal from '../modal/EmployeeEditModal/EmployeeEditModal';\r\nimport EmployeeDeleteModal from '../modal/EmployeeDeleteModal/EmployeeDeleteModal';\r\n\r\n// JavaScript Plugin\r\nimport $api from 'axios';\r\nimport rq from 'random-quotes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// CSS Framework\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Employees(props) {\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n  const [triggerModalCount, setTriggerModalCount] = useState(0);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [editTarget, setEditTarget] = useState({});\r\n\r\n  // Show modal & pass selected employee data to modal.\r\n  const handleEditModalData = (dataset, i) => {\r\n\r\n    setEditTarget ({...dataset.employee, order: i});\r\n\r\n    // Trigger direct type of children show or hide modal by update trigger count.\r\n    setTriggerModalCount(triggerModalCount + 1);\r\n    setModalType(dataset.type);\r\n  };\r\n\r\n  // Update selected employee's data.\r\n  const handleEditEmployee = (editedEmployee) => {\r\n\r\n    const pos = editTarget.order;\r\n\r\n    setEmployees(prevEmployees => {\r\n\r\n      prevEmployees[pos].name = editedEmployee.name;\r\n      prevEmployees[pos].quote = editedEmployee.quote;\r\n\r\n      const updatedEmployees = [...prevEmployees];\r\n      return updatedEmployees;\r\n    });\r\n  };\r\n\r\n  // Delete selected employee's data.\r\n  const handleDeleteEmployee = () => {\r\n\r\n    const pos = editTarget.order;\r\n\r\n    setEmployees(prevEmployees => {\r\n\r\n      prevEmployees.splice (pos, 1);\r\n\r\n      const updatedEmployees = [...prevEmployees];\r\n      return updatedEmployees;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // Retrieve (initialize) employees' data.\r\n    $api.get('https://randomuser.me/api/?results=10')\r\n      .then (res => {\r\n        \r\n        const cleanSource = [...res.data.results];\r\n        const employeeList = cleanSource.map(employee => {\r\n          return {name: employee.name, quote: rq().body, id: uuidv4()};\r\n        });\r\n        \r\n        setEmployees(employeeList);\r\n      });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (! props.addedEmployee)\r\n  //     return;\r\n\r\n  //   setEmployees ([...employees, props.addedEmployee]);\r\n\r\n  // }, [props.addedEmployee]);\r\n  \r\n  return (\r\n    <div className=\"employees\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {\r\n            employees.map((employee, i) => (\r\n              <Card\r\n              bg=\"light\"\r\n              key={employee.id}\r\n              text=\"dark\"\r\n              className='mb-2 position-relative'\r\n              >\r\n                <Card.Header className=\"font-weight-bold\">{employee.name.first} { employee.name.last}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text className=\"font-weight-bold\">\r\n                    My Declaration to Win The Prize:\r\n                  </Card.Text>\r\n                  <Card.Text className=\"text-left\">\r\n                    {employee.quote}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n\r\n                <div className=\"editor position-absolute\">\r\n                  <i onClick={() => handleEditModalData({employee, type: 'edit'}, i)} className=\"fas fa-edit edit\"></i>\r\n                  <i onClick={() => handleEditModalData({employee, type: 'delete'}, i)} className=\"fas fa-trash trash\"></i>\r\n                </div>\r\n              </Card>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <EmployeeEditModal triggerModalCount={triggerModalCount} modalType={modalType} editTarget={editTarget} handleEditEmployee={handleEditEmployee}></EmployeeEditModal>\r\n      <EmployeeDeleteModal triggerModalCount={triggerModalCount} modalType={modalType} editTarget={editTarget} handleDeleteEmployee={handleDeleteEmployee}></EmployeeDeleteModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js",["66","67"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js",[],["68","69"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js",["70","71","72","73","74","75","76"],"// React & Component\r\nimport { useState, useEffect } from 'react';\r\n\r\n// avaScript Plugins\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// CSS Framework\r\n// import { Button, Modal, Form } from 'react-bootstrap';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles (theme => ({\r\n  form: {\r\n    margin: theme.spacing (1),\r\n  },\r\n  textInput: {\r\n    width: 200,\r\n    margin: theme.spacing (1),\r\n  },\r\n}));\r\n\r\nfunction EmployeeAddModal ({showModal, handleTriggerModal, handleAddEmployee}) {\r\n\r\n  const classes = useStyles ();\r\n\r\n  const [open, setOpen] = useState (false);\r\n  const theme = useTheme ();\r\n  const fullScreen = useMediaQuery (theme.breakpoints.down ('sm'));\r\n\r\n  // Initialize employee's data to be edited.\r\n  const [input, setInput] = useState ({name: {first: '', last: ''}, quote: ''});\r\n  const handleCloseModal = () => setOpen (false);\r\n\r\n  const handleAdd = () => {\r\n\r\n    // const first = document.querySelector('.first').value;\r\n    // const last = document.querySelector('.last').value;\r\n    // const quote = document.querySelector('.quote').value;\r\n    \r\n    // if (!first || !last || !quote)\r\n    //   return alert('Sorry, columns may not be empty.');\r\n\r\n    // handleAddEmployee ({name: {first, last}, quote, id: uuidv4 ()});\r\n\r\n    // Close modal\r\n    handleTriggerModal ();\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      fullScreen={fullScreen}\r\n      open={showModal}\r\n      onClose={handleTriggerModal}\r\n      aria-labelledby=\"responsive-dialog-title\"\r\n    >\r\n      \r\n      <DialogTitle id=\"responsive-dialog-title\">\r\n        {/* {input.name.first + ' ' + input.name.last} */}\r\n      </DialogTitle>\r\n\r\n      <DialogContent>\r\n        <DialogContentText component={'span'}>\r\n          \r\n          <form noValidate autoComplete=\"off\">\r\n            <div>\r\n              <TextField\r\n                error\r\n                className={classes.textInput}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"First Name\"\r\n                defaultValue=\"QWER\"\r\n                helperText=\"Incorrect entry.\"\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                className={classes.textInput}\r\n                error\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"Last Name\"\r\n                defaultValue=\"QWER\"\r\n                helperText=\"Incorrect entry.\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          </form>\r\n\r\n          <form className={classes.form}>\r\n            <div>\r\n              <TextField\r\n                error\r\n                fullWidth\r\n                id=\"outlined-multiline-static\"\r\n                label=\"My Declaration\"\r\n                multiline\r\n                rows={4}\r\n                defaultValue=\"QWER\"\r\n                variant=\"outlined\"\r\n              />\r\n            </div>\r\n          </form>\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={handleTriggerModal} variant=\"outlined\" color=\"primary\">\r\n          Disagree\r\n        </Button>\r\n        <Button onClick={handleTriggerModal} variant=\"outlined\" color=\"primary\">\r\n          Agree\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n\r\n  // return (\r\n  //   <>\r\n  //     <Modal show={showModal} onHide={handleTriggerModal}>\r\n\r\n  //       <Modal.Header closeButton>\r\n  //         <Modal.Title>Add a Employee</Modal.Title>\r\n  //       </Modal.Header>\r\n\r\n  //       <Modal.Body>\r\n\r\n  //         <Form.Row className=\"mt-2 mb-4\">\r\n\r\n  //           <Form.Control className=\"first col-5 mr-5\" type=\"text\" placeholder=\"First Name\" />\r\n  //           <Form.Control className=\"last col-5\" type=\"text\" placeholder=\"Last Name\" />\r\n\r\n  //         </Form.Row>\r\n\r\n  //         <Form.Row>\r\n  //           <Form.Control className=\"quote\" placeholder=\"Declaration to Win The Prize!\" as=\"textarea\" rows={3} />\r\n  //         </Form.Row>\r\n          \r\n  //       </Modal.Body>\r\n  //       <Modal.Footer>\r\n\r\n  //         <Button variant=\"warning\" onClick={handleTriggerModal}>\r\n  //           Cancel\r\n  //         </Button>\r\n  //         <Button variant=\"success\" onClick={handleAdd}>\r\n  //           Create\r\n  //         </Button>\r\n\r\n  //       </Modal.Footer>\r\n  //     </Modal>\r\n  //   </>\r\n  // )\r\n};\r\n\r\nexport default EmployeeAddModal;\r\n","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js",["77"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js",["78","79"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js",[],{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":83,"column":6,"nodeType":"86","endLine":83,"endColumn":21,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"92","line":2,"column":20,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"80","replacedBy":"93"},{"ruleId":"82","replacedBy":"94"},{"ruleId":"88","severity":1,"message":"92","line":2,"column":20,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"88","severity":1,"message":"95","line":5,"column":16,"nodeType":"90","messageId":"91","endLine":5,"endColumn":22},{"ruleId":"88","severity":1,"message":"96","line":36,"column":10,"nodeType":"90","messageId":"91","endLine":36,"endColumn":14},{"ruleId":"88","severity":1,"message":"97","line":41,"column":10,"nodeType":"90","messageId":"91","endLine":41,"endColumn":15},{"ruleId":"88","severity":1,"message":"98","line":41,"column":17,"nodeType":"90","messageId":"91","endLine":41,"endColumn":25},{"ruleId":"88","severity":1,"message":"99","line":42,"column":9,"nodeType":"90","messageId":"91","endLine":42,"endColumn":25},{"ruleId":"88","severity":1,"message":"100","line":44,"column":9,"nodeType":"90","messageId":"91","endLine":44,"endColumn":18},{"ruleId":"84","severity":1,"message":"85","line":104,"column":6,"nodeType":"86","endLine":104,"endColumn":21,"suggestions":"101"},{"ruleId":"84","severity":1,"message":"102","line":125,"column":6,"nodeType":"86","endLine":125,"endColumn":26,"suggestions":"103"},{"ruleId":"104","severity":1,"message":"105","line":136,"column":5,"nodeType":"106","messageId":"107","endLine":146,"endColumn":6},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'employees'. Either include it or remove the dependency array. You can also do a functional update 'setEmployees(e => ...)' if you only need 'employees' in the 'setEmployees' call.","ArrayExpression",["110"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["108"],["109"],"'uuidv4' is defined but never used.","'open' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'handleCloseModal' is assigned a value but never used.","'handleAdd' is assigned a value but never used.",["111"],"React Hook useEffect has a missing dependency: 'checkInput'. Either include it or remove the dependency array.",["112"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},{"desc":"113","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [addedEmployee, employees]",{"range":"118","text":"119"},{"range":"120","text":"119"},"Update the dependencies array to be: [checkInput, first, last, quote]",{"range":"121","text":"122"},[2304,2319],"[addedEmployee, employees]",[2865,2880],[2715,2735],"[checkInput, first, last, quote]"]