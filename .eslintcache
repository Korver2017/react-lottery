[{"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js":"1","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js":"2","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js":"4","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js":"5","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js":"6","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js":"7","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js":"8","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js":"9","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js":"10","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js":"11","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js":"12","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js":"13","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js":"14"},{"size":624,"mtime":1612034986658,"results":"15","hashOfConfig":"16"},{"size":869,"mtime":1612035487093,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1611280843184,"results":"18","hashOfConfig":"16"},{"size":3932,"mtime":1612035487094,"results":"19","hashOfConfig":"16"},{"size":2486,"mtime":1612034986657,"results":"20","hashOfConfig":"16"},{"size":1782,"mtime":1612034986656,"results":"21","hashOfConfig":"16"},{"size":1761,"mtime":1612035905424,"results":"22","hashOfConfig":"16"},{"size":827,"mtime":1615507795140,"results":"23","hashOfConfig":"24"},{"size":869,"mtime":1615507206594,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1613409601397,"results":"26","hashOfConfig":"24"},{"size":4889,"mtime":1615823001237,"results":"27","hashOfConfig":"24"},{"size":4698,"mtime":1615666774633,"results":"28","hashOfConfig":"24"},{"size":5599,"mtime":1615666734874,"results":"29","hashOfConfig":"24"},{"size":1782,"mtime":1615503915933,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1thhyc2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"129a7ln",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js",[],["63","64"],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js",["65"],"// React & Component\r\nimport { useState, useEffect } from 'react';\r\nimport './Employees.css';\r\nimport EmployeeEditModal from '../modal/EmployeeEditModal/EmployeeEditModal';\r\nimport EmployeeDeleteModal from '../modal/EmployeeDeleteModal/EmployeeDeleteModal';\r\n\r\n// JavaScript Plugin\r\nimport $api from 'axios';\r\nimport rq from 'random-quotes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// CSS Framework\r\nimport { Card } from 'react-bootstrap';\r\n\r\nfunction Employees(props) {\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n  const [triggerModalCount, setTriggerModalCount] = useState(0);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [editTarget, setEditTarget] = useState({});\r\n\r\n  // Show modal & pass selected employee data to modal.\r\n  const handleEditModalData = (dataset, i) => {\r\n\r\n    setEditTarget ({...dataset.employee, order: i});\r\n\r\n    // Trigger direct type of children show or hide modal by update trigger count.\r\n    setTriggerModalCount(triggerModalCount + 1);\r\n    setModalType(dataset.type);\r\n  };\r\n\r\n  // Update selected employee's data.\r\n  const handleEditEmployee = (editedEmployee) => {\r\n\r\n    const pos = editTarget.order;\r\n\r\n    setEmployees(prevEmployees => {\r\n\r\n      prevEmployees[pos].name = editedEmployee.name;\r\n      prevEmployees[pos].quote = editedEmployee.quote;\r\n\r\n      const updatedEmployees = [...prevEmployees];\r\n      return updatedEmployees;\r\n    });\r\n  };\r\n\r\n  // Delete selected employee's data.\r\n  const handleDeleteEmployee = () => {\r\n\r\n    const pos = editTarget.order;\r\n\r\n    setEmployees(prevEmployees => {\r\n\r\n      prevEmployees.splice (pos, 1);\r\n\r\n      const updatedEmployees = [...prevEmployees];\r\n      return updatedEmployees;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // Retrieve (initialize) employees' data.\r\n    $api.get('https://randomuser.me/api/?results=10')\r\n      .then (res => {\r\n        \r\n        const cleanSource = [...res.data.results];\r\n        const employeeList = cleanSource.map(employee => {\r\n          return {name: employee.name, quote: rq().body, id: uuidv4()};\r\n        });\r\n        \r\n        setEmployees(employeeList);\r\n      });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n\r\n  //   if (! props.addedEmployee)\r\n  //     return;\r\n\r\n  //   setEmployees ([...employees, props.addedEmployee]);\r\n\r\n  // }, [props.addedEmployee]);\r\n  \r\n  return (\r\n    <div className=\"employees\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {\r\n            employees.map((employee, i) => (\r\n              <Card\r\n              bg=\"light\"\r\n              key={employee.id}\r\n              text=\"dark\"\r\n              className='mb-2 position-relative'\r\n              >\r\n                <Card.Header className=\"font-weight-bold\">{employee.name.first} { employee.name.last}</Card.Header>\r\n                <Card.Body>\r\n                  <Card.Text className=\"font-weight-bold\">\r\n                    My Declaration to Win The Prize:\r\n                  </Card.Text>\r\n                  <Card.Text className=\"text-left\">\r\n                    {employee.quote}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n\r\n                <div className=\"editor position-absolute\">\r\n                  <i onClick={() => handleEditModalData({employee, type: 'edit'}, i)} className=\"fas fa-edit edit\"></i>\r\n                  <i onClick={() => handleEditModalData({employee, type: 'delete'}, i)} className=\"fas fa-trash trash\"></i>\r\n                </div>\r\n              </Card>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n\r\n      <EmployeeEditModal triggerModalCount={triggerModalCount} modalType={modalType} editTarget={editTarget} handleEditEmployee={handleEditEmployee}></EmployeeEditModal>\r\n      <EmployeeDeleteModal triggerModalCount={triggerModalCount} modalType={modalType} editTarget={editTarget} handleDeleteEmployee={handleDeleteEmployee}></EmployeeDeleteModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js",[],"C:\\Users\\user\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js",["66","67"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\index.js",[],["68","69"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeAddModal\\EmployeeAddModal.js",["70","71","72","73","74","75","76"],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\employees\\Employees.js",["77"],"// React & Component\r\nimport { useState, useEffect } from 'react';\r\nimport './Employees.css';\r\nimport EmployeeEditModal from '../modal/EmployeeEditModal/EmployeeEditModal';\r\nimport EmployeeDeleteModal from '../modal/EmployeeDeleteModal/EmployeeDeleteModal';\r\n\r\n// JavaScript Plugin\r\nimport $api from 'axios';\r\nimport rq from 'random-quotes';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// CSS Framework\r\n// import { Card } from 'react-bootstrap';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CreateRoundedIcon from '@material-ui/icons/CreateRounded';\r\nimport DeleteForeverRoundedIcon from '@material-ui/icons/DeleteForeverRounded';\r\n\r\nconst useStyles = makeStyles (theme => ({\r\n  root: {\r\n    padding: theme.spacing (2),\r\n  },\r\n  card: {\r\n    height: '100%'\r\n  },\r\n  sub: {\r\n    // marginBottom: theme.spacing (5),\r\n    fontWeight: 'bold',\r\n    textAlign: 'center',\r\n  },\r\n  icons: {\r\n    textAlign: 'right',\r\n  }\r\n}));\r\n\r\nfunction Employees({addedEmployee}) {\r\n\r\n  const [employees, setEmployees] = useState([]);\r\n  const [triggerModalCount, setTriggerModalCount] = useState(0);\r\n  const [modalType, setModalType] = useState(null);\r\n  const [editTarget, setEditTarget] = useState({});\r\n\r\n  // Show modal & pass selected employee data to modal.\r\n  const handleEditModalData = (dataset, i) => {\r\n\r\n    setEditTarget ({...dataset.employee, order: i});\r\n\r\n    // Trigger direct type of children show or hide modal by update trigger count.\r\n    setTriggerModalCount(triggerModalCount + 1);\r\n    setModalType(dataset.type);\r\n  };\r\n\r\n  // Update selected employee's data.\r\n  const handleEditEmployee = (editedEmployee) => {\r\n\r\n    const pos = editTarget.order;\r\n\r\n    setEmployees(prevEmployees => {\r\n\r\n      prevEmployees[pos].name = editedEmployee.name;\r\n      prevEmployees[pos].quote = editedEmployee.quote;\r\n\r\n      const updatedEmployees = [...prevEmployees];\r\n      return updatedEmployees;\r\n    });\r\n  };\r\n\r\n  // Delete selected employee's data.\r\n  const handleDeleteEmployee = () => {\r\n\r\n    const pos = editTarget.order;\r\n\r\n    setEmployees(prevEmployees => {\r\n\r\n      prevEmployees.splice (pos, 1);\r\n\r\n      const updatedEmployees = [...prevEmployees];\r\n      return updatedEmployees;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    // Retrieve (initialize) employees' data.\r\n    $api.get('https://randomuser.me/api/?results=10')\r\n      .then (res => {\r\n        \r\n        const cleanSource = [...res.data.results];\r\n        const employeeList = cleanSource.map(employee => {\r\n          return {name: employee.name, quote: rq().body, id: uuidv4()};\r\n        });\r\n        \r\n        setEmployees(employeeList);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\r\n    if (Object.keys(addedEmployee).length <= 0) \r\n      return;\r\n\r\n    setEmployees ([...employees, addedEmployee]);\r\n\r\n  }, [addedEmployee]);\r\n\r\n  const classes = useStyles ();\r\n  \r\n  return (\r\n    <div className=\"employees\">\r\n      <Grid container>\r\n\r\n        {\r\n          employees.map ((employee, i) => (\r\n            <Grid key={employee.id} className={classes.root} item xs={3}>\r\n              <Card className={classes.card}>\r\n                <CardHeader title={employee.name.first + ' ' + employee.name.last} />\r\n                <Divider variant=\"middle\" />\r\n                <CardContent>\r\n                  <p className={classes.sub}>My Declaration to <br /> Win The Prize:</p>\r\n                  {employee.quote}\r\n                </CardContent>\r\n\r\n                <Box className={classes.icons}>\r\n                  <IconButton onClick={() => handleEditModalData ({employee, type: 'edit'}, i)}>\r\n                    <CreateRoundedIcon />\r\n                  </IconButton>\r\n\r\n                  <IconButton onClick={() => handleEditModalData ({employee, type: 'delete'}, i)}>\r\n                    <DeleteForeverRoundedIcon />\r\n                  </IconButton>\r\n                </Box>\r\n              </Card>\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n\r\n      <EmployeeEditModal triggerModalCount={triggerModalCount} modalType={modalType} editTarget={editTarget} handleEditEmployee={handleEditEmployee}></EmployeeEditModal>\r\n      <EmployeeDeleteModal triggerModalCount={triggerModalCount} modalType={modalType} editTarget={editTarget} handleDeleteEmployee={handleDeleteEmployee}></EmployeeDeleteModal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Employees;\r\n","C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeEditModal\\EmployeeEditModal.js",[],"C:\\Users\\User\\Desktop\\Projects\\react_year_end_raffle\\src\\components\\modal\\EmployeeDeleteModal\\EmployeeDeleteModal.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":83,"column":6,"nodeType":"84","endLine":83,"endColumn":21,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":10,"nodeType":"88","messageId":"89","endLine":2,"endColumn":18},{"ruleId":"86","severity":1,"message":"90","line":2,"column":20,"nodeType":"88","messageId":"89","endLine":2,"endColumn":29},{"ruleId":"78","replacedBy":"91"},{"ruleId":"80","replacedBy":"92"},{"ruleId":"86","severity":1,"message":"90","line":2,"column":20,"nodeType":"88","messageId":"89","endLine":2,"endColumn":29},{"ruleId":"86","severity":1,"message":"93","line":6,"column":16,"nodeType":"88","messageId":"89","endLine":6,"endColumn":22},{"ruleId":"86","severity":1,"message":"94","line":37,"column":10,"nodeType":"88","messageId":"89","endLine":37,"endColumn":14},{"ruleId":"86","severity":1,"message":"95","line":42,"column":10,"nodeType":"88","messageId":"89","endLine":42,"endColumn":15},{"ruleId":"86","severity":1,"message":"96","line":42,"column":17,"nodeType":"88","messageId":"89","endLine":42,"endColumn":25},{"ruleId":"86","severity":1,"message":"97","line":43,"column":9,"nodeType":"88","messageId":"89","endLine":43,"endColumn":25},{"ruleId":"86","severity":1,"message":"98","line":45,"column":9,"nodeType":"88","messageId":"89","endLine":45,"endColumn":18},{"ruleId":"82","severity":1,"message":"83","line":110,"column":6,"nodeType":"84","endLine":110,"endColumn":21,"suggestions":"99"},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'employees'. Either include it or remove the dependency array. You can also do a functional update 'setEmployees(e => ...)' if you only need 'employees' in the 'setEmployees' call.","ArrayExpression",["102"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.",["100"],["101"],"'uuidv4' is defined but never used.","'open' is assigned a value but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'handleCloseModal' is assigned a value but never used.","'handleAdd' is assigned a value but never used.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"104","fix":"106"},"Update the dependencies array to be: [addedEmployee, employees]",{"range":"107","text":"108"},{"range":"109","text":"108"},[2304,2319],"[addedEmployee, employees]",[3149,3164]]